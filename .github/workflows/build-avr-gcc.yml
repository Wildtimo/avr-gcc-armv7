name: Build AVR GCC for ARM

on:
  push:
  workflow_dispatch:

jobs:
  build-avr-gcc:
    runs-on: ubuntu-latest
    container:
      image: debian:bullseye

    steps:
      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y \
            build-essential \
            git wget autoconf netpbm libmpc-dev \
            libmpfr-dev libgmp-dev texinfo doxygen \
            flex bison libexpat1-dev slang-xfig \
            crossbuild-essential-armhf \
            gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf

      - name: Checkout source
        uses: actions/checkout@v4

      - name: Build AVR-GCC for ARM
        run: |
          export CC=arm-linux-gnueabihf-gcc
          export CXX=arm-linux-gnueabihf-g++
          export AR=arm-linux-gnueabihf-ar
          export RANLIB=arm-linux-gnueabihf-ranlib
          bash ./build.sh

      - name: Verify toolchain (cross-compiled)
        run: |
          file /opt/avr-gcc/bin/avr-g++
          # Should say ELF 32-bit LSB executable, ARM, EABI5 version ...

      - name: Create tarball
        run: |
          tar cjf modm-avr-gcc-armhf.tar.bz2 -C /opt avr-gcc

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: modm-avr-gcc-armhf
          path: modm-avr-gcc-armhf.tar.bz2
